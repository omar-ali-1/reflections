What happens when you initialize a repository? Why do you need to do it?

A .git folder is created. I need to do it because a regurlar folder which does not have
the .git folder is not a repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is an intermediate area between the directory and the repository, which gives us more control over
what gets committed to the repository.

How can you use the staging area to make sure you have one commit per logical change?

By choosing which files I place in the staging area to be committed, I can be more specific regarding 
which changes I'd like to be included in the commit, giving me more control to make the committed changes
logically seperate.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When we'd like to make an experimental or radical change to a piece of software. Branching allows us to do that without
affecting the production line of commits.

How do the diagrams help you visualize the branch structure?

By visualizing it. It shows the commits and the connections between them.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Content which did not exist in the original node before the branches were split (new branch) but was introduced
in either branch afterwards, remains. Content which was there but was deleted, is not included. These differences
are combined into one branch, so that we now have only one of each file, but the commit history is combined so that 
it includes commits from both branches sorted by timestamp.